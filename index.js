const Discord = require('discord.js');
require('discord-reply');

const client = new Discord.Client({
    partials: ['MESSAGE', 'CHANNEL', 'REACTION'],
    fetchAllMembers: true,
    shards: "auto",
    restTimeOffset: 0
});

require('discord-buttons')(client);

const config = require('./config.js');
const prefix = config.botConfig.defaultprefix;

client.commands = new Discord.Collection();
const cooldown = new Discord.Collection();

['commandHandler', 'eventHandler'].forEach((handler) => {
    require(`./handlers/${handler}`)(client);
});

client.on('debug', () => { });
client.on('warn', () => { });
client.on('error', () => { });

client.on('ready', async () => {
    const activities = [
        { name: `${config.botConfig.animatedstatus1}`, type: `${config.botConfig.animatedpresencestatus1}` },
        { name: `${config.botConfig.animatedstatus2}`, type: `${config.botConfig.animatedpresencestatus2}` }
    ];

    client.user.setPresence({ activity: activities[0] });
    let activity = 1;

    setInterval(() => {
        activities[2] = { name: `${config.botConfig.animatedstatus1}`, type: `${config.botConfig.animatedpresencestatus1}` },
        activities[3] = { name: `${config.botConfig.animatedstatus2}`, type: `${config.botConfig.animatedpresencestatus2}` }
        if (activity > 3) activity = 0;
        client.user.setActivity(activities[activity]);
        activity++;
    }, 5000);

    console.log(`[ üîå ] Pomy≈õlnie zalogowano siƒô jako ${client.user.tag}!`);
});

client.on('message', async message => {
    if (message.author.bot) return;
    
    if (message.content.startsWith(prefix)) {
        const args = message.content.slice(prefix.length).split(/ +/);
        const commandName = args.shift().toLowerCase();
        const command = client.commands.get(commandName);
        let guild = message.guild;

        if (!command) return;

        if (!cooldown.has(commandName)) {
            cooldown.set(commandName, new Discord.Collection());
        };

        if (message.channel.type === 'dm' && !message.guild) return;

        if (command.ownerOnly) {
            if (!config.additionalBotConfig.ownerid.includes(message.author.id)) return message.lineReply(`\`[ ‚ùå ]\` Wprowadzona komenda jest dostƒôpna tylko dla w≈Ça≈õciciela!`);
        };

        if (command.userPermissions && command.userPermissions.length) {
            if (!message.member.permissionsIn(message.channel).has(command.userPermissions)) return message.lineReply(`\`[ ‚ùå ]\` Nie posiadasz wystarczajƒÖcych uprawnie≈Ñ do u≈ºycia tej komendy!`);
        };

        if (command.botPermissions && command.botPermissions.length) {
            if (!guild.me.permissionsIn(message.channel).has(command.botPermissions)) return message.lineReply(`\`[ ‚ùå ]\` Nie posiadam wystarczajƒÖcych uprawnie≈Ñ do wykonania tej komendy!`);
        };

        if (command.args && !args.length) {
            if (command.correctUsage) return message.lineReply(`\`[ ‚ùå ]\` Brakuje argument√≥w! Poprawne u≈ºycie: \`${config.botConfig.defaultprefix}${command.name} ${command.correctUsage}.\``);
        };

        const now = Date.now();
        const timestamps = cooldown.get(commandName);
        const cooldownAmount = (command.cooldown || 3) * 1000;

        if (timestamps.has(message.author.id)) {
            const expirationTime = timestamps.get(message.author.id) + cooldownAmount;

            if (now < expirationTime) {
                const timeLeft = (expirationTime - now) / 1000;
                return message.lineReply(`\`[ ‚ùå ]\` Musisz odczekaƒá **${timeLeft.toFixed( 1, )} sekund** zanim ponownie u≈ºyjesz tej komendy!`);
            };
        };

        timestamps.set(message.author.id, now)
        setTimeout(() => timestamps.delete(message.author.id), cooldownAmount)

        try {
            command.run(client, message, args);
        } catch (error) {
            console.log(error);
        }  

    };

});
client.on('guildMemberAdd', async (member) => {

    const channel = await member.guild.channels.cache.find(x => x.id === "1004405845817307176");

    const embed = new Discord.MessageEmbed()
    .setColor(`#00FFFF`)
    .setTitle('„Ö§‚†Ä„Ö§„Ö§‚†Ä„Ö§„Ö§‚†Ä„Ö§‚†Ä Witaj u≈ºytkowniku!')
    .setDescription(`„Ö§‚†Ä„Ö§„Ö§‚†Ä„Ö§„Ö§‚†Ä Witaj ${member.user.username}
    „Ö§‚†Ä„Ö§„Ö§‚†Ä„Ö§„Ö§‚†Ä Na oficjalnym discordzie MTSHOST.PL„Ö§‚†Ä„Ö§`) 
    .setFooter(`„Ö§‚†Ä„Ö§„Ö§‚†Ä„Ö§„Ö§‚†Ä Mamy nadziejƒô, ≈ºe zostaniesz z nami na d≈Çu≈ºej! 
    „Ö§‚†Ä„Ö§„Ö§‚†Ä Jeste≈õ ${member.guild.memberCount} osobƒÖ na naszym serwerze!  `) 
    .setThumbnail('https://media.discordapp.net/attachments/1004406569032761386/1004409542160941087/baCrB1x.png?width=434&height=434')
    .setTimestamp()

    channel.send(embed);
});

client.login(config.botConfig.token);